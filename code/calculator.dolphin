<?xml version="1.0" encoding="utf-16"?>
<Dolphin>
  <Version>1.1.3</Version>
  <ProcessorName>PSI30</ProcessorName>
  <ProcessorIPS>100000</ProcessorIPS>
  <ProcessorStep>S</ProcessorStep>
  <ProcessorInto>O</ProcessorInto>
  <PanelMode>Calm</PanelMode>
  <DisplayBitmap>Y</DisplayBitmap>
  <DisplayTechno>LCD</DisplayTechno>
  <KeyboardArrows>N</KeyboardArrows>
  <Source>;David Dieperink    &lt;br/&gt;;ETML    &lt;br/&gt;;Calculatrice    &lt;br/&gt;;13.10.2022    &lt;br/&gt;    &lt;br/&gt;POSX = 0&lt;tab/&gt;; position en X    &lt;br/&gt;POSY = 1&lt;tab/&gt;; position en Y    &lt;br/&gt;NBONE = 2&lt;tab/&gt;; chiffre n 1    &lt;br/&gt;NBTWO = 3&lt;tab/&gt;; chiffre n 2    &lt;br/&gt;LENGTH = 4&lt;tab/&gt;; longueur des variables sur la pile    &lt;br/&gt;    &lt;br/&gt;&lt;tab/&gt;.LOC&lt;tab/&gt;0    &lt;br/&gt;&lt;tab/&gt;SUB&lt;tab/&gt;#LENGTH, SP    &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#10, {SP}+POSX    &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#10, {SP}+POSY    &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, {SP}+NBONE    &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, {SP}+NBTWO    &lt;br/&gt;    &lt;br/&gt;NUMBER= H&amp;apos;600&lt;tab/&gt;; nombre entré par l&amp;apos;utilisateur  &lt;br/&gt;NB_DIGIT= H&amp;apos;601&lt;tab/&gt;; nombre de digit entré  &lt;br/&gt;NB_PIXLINE= H&amp;apos;602&lt;tab/&gt;; nombre de pixel pour la ligne  &lt;br/&gt;OLD_X= H&amp;apos;603&lt;tab/&gt;; ancienne valeur de X  &lt;br/&gt;OLD_Y= H&amp;apos;604&lt;tab/&gt;; ancienne valeur de Y &lt;br/&gt;NB_NUMBERS= H&amp;apos;605&lt;tab/&gt;; nombre de chiffre entré &lt;br/&gt;MULTIPLY_TEN_X= H&amp;apos;606&lt;tab/&gt;; mult &lt;br/&gt;MULTIPLY_TEN_Y= H&amp;apos;607&lt;tab/&gt;; mult &lt;br/&gt;MOVE&lt;tab/&gt;#0, NB_PIXLINE &lt;br/&gt;MOVE&lt;tab/&gt;#0, B    &lt;br/&gt;MOVE&lt;tab/&gt;#1, X&lt;tab/&gt;; position X à 1    &lt;br/&gt;MOVE&lt;tab/&gt;#1, Y&lt;tab/&gt;; position Y à 1    &lt;br/&gt;    &lt;br/&gt;LOOP:  &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#0, NB_PIXLINE  &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;DRAW_LINE  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;H&amp;apos;C07, B&lt;tab/&gt;; récupere le chiffre appuyé    &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#2, NB_DIGIT&lt;tab/&gt;; compare si l&amp;apos;utilisateur à entré 2 digit  &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;SWITCH&lt;tab/&gt;; si c&amp;apos;est égal on appelle la méthode switch  &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#0, B&lt;tab/&gt;; compare si B vaut toujours 0    &lt;br/&gt;&lt;tab/&gt;JUMP,NE&lt;tab/&gt;DRAW_NUMBERS&lt;tab/&gt;; si c&amp;apos;est pas égal on appelle DRAW_NUMBERS  &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP    &lt;br/&gt;    &lt;br/&gt;DRAW_NUMBERS:    &lt;br/&gt;&lt;tab/&gt;SUB&lt;tab/&gt;#H&amp;apos;50, B&lt;tab/&gt;; retire 50 à B pour ecrire le chiffre &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;B, NUMBER    &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;DRAW_DIGIT &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#0, NB_DIGIT &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;ADD_NUMBERS &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#1, NB_DIGIT &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;ADD_SECOND_NUMBER &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;#1, X  &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;#1, NB_DIGIT    &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, B&lt;tab/&gt;; réinitialisation de B    &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, H&amp;apos;C07&lt;tab/&gt;; réinitialisation de l&amp;apos;adresse H&amp;apos;C07    &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP    &lt;br/&gt; &lt;br/&gt;ADD_NUMBERS: &lt;br/&gt;&lt;tab/&gt;SUB&lt;tab/&gt;#H&amp;apos;30, B &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;B,&lt;tab/&gt;{SP}+NBONE&lt;tab/&gt;; met la valeur de X dans  NBONE &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, MULTIPLY_TEN_X &lt;br/&gt;    MOVE&lt;tab/&gt;B, MULTIPLY_TEN_Y &lt;br/&gt;    MOVE&lt;tab/&gt;#0, A &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;MULTIPLY_TEN &lt;br/&gt; &lt;br/&gt;MULTIPLY_TEN: &lt;br/&gt;    ADD&lt;tab/&gt;MULTIPLY_TEN_Y, A &lt;br/&gt;    INC&lt;tab/&gt;MULTIPLY_TEN_X &lt;br/&gt;    COMP&lt;tab/&gt;#10, MULTIPLY_TEN_X &lt;br/&gt;    JUMP,LO&lt;tab/&gt;MULTIPLY_TEN &lt;br/&gt;    MOVE&lt;tab/&gt;A, {SP}+NBONE &lt;br/&gt;    JUMP&lt;tab/&gt;LOOP &lt;br/&gt; &lt;br/&gt;ADD_SECOND_NUMBER: &lt;br/&gt;&lt;tab/&gt;SUB&lt;tab/&gt;#H&amp;apos;30, B &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;B, {SP}+NBONE &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP &lt;br/&gt; &lt;br/&gt;DRAW_DIGIT:      &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;NUMBER,A    &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_DrawChar &lt;br/&gt;&lt;tab/&gt;RET  &lt;br/&gt;  &lt;br/&gt;SWITCH:  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;H&amp;apos;C07, B&lt;tab/&gt;; récupere le chiffre appuyé    &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#1, B&lt;tab/&gt;  &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;DRAW_ADD&lt;tab/&gt;; si b = 1 -&amp;gt; addition  &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#2, B  &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;DRAW_SUB&lt;tab/&gt;; si b = 2 -&amp;gt; soustraction &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#3, B &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;DRAW_MULTIPLY&lt;tab/&gt;; si b = 3 -&amp;gt; multiplication &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#4, B &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;DRAW_DIVISION&lt;tab/&gt;; si b = 4 -&amp;gt; division &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;SWITCH&lt;tab/&gt;; sinon on réappelle switch  &lt;br/&gt; &lt;br/&gt;DRAW_ADD: &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#1, NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;LOOP &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;X, OLD_X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;Y, OLD_Y  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#20, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#7, Y  &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;DEC&lt;tab/&gt;X  &lt;br/&gt;&lt;tab/&gt;DEC&lt;tab/&gt;Y  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;#2, X  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_X, X  &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;#1, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_Y, Y  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, H&amp;apos;C07  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, NB_DIGIT  &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP  &lt;br/&gt; &lt;br/&gt;DRAW_SUB: &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#1, NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;LOOP &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;X, OLD_X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;Y, OLD_Y  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#20, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#8, Y  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_X, X  &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;#1, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_Y, Y  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, H&amp;apos;C07  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, NB_DIGIT  &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP &lt;br/&gt; &lt;br/&gt;DRAW_MULTIPLY: &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#1, NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;LOOP &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;X, OLD_X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;Y, OLD_Y &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#20, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#8, Y  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X &lt;br/&gt;&lt;tab/&gt;INC X  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel &lt;br/&gt;&lt;tab/&gt;DEC&lt;tab/&gt;X &lt;br/&gt;&lt;tab/&gt;INC Y &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y &lt;br/&gt;&lt;tab/&gt;DEC X &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel &lt;br/&gt;&lt;tab/&gt;INC X &lt;br/&gt;&lt;tab/&gt;INC X &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_X, X  &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;#1, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_Y, Y  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, H&amp;apos;C07  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, NB_DIGIT  &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP &lt;br/&gt; &lt;br/&gt;DRAW_DIVISION: &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#1, NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;LOOP &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;NB_NUMBERS &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;X, OLD_X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;Y, OLD_Y &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#22, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#7, Y  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y &lt;br/&gt;&lt;tab/&gt;DEC&lt;tab/&gt;X &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y &lt;br/&gt;&lt;tab/&gt;DEC&lt;tab/&gt;X &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_X, X  &lt;br/&gt;&lt;tab/&gt;ADD&lt;tab/&gt;#1, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;OLD_Y, Y  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, H&amp;apos;C07  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#0, NB_DIGIT  &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP &lt;br/&gt; &lt;br/&gt;DRAW_LINE: &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#12, Y  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#2, X  &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#0, NB_PIXLINE  &lt;br/&gt;&lt;tab/&gt;JUMP,EQ&lt;tab/&gt;FORLOOP  &lt;br/&gt;  &lt;br/&gt;FORLOOP:  &lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_SetPixel  &lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X  &lt;br/&gt;&lt;tab/&gt;INC NB_PIXLINE  &lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#29, NB_PIXLINE  &lt;br/&gt;&lt;tab/&gt;JUMP,NE&lt;tab/&gt;FORLOOP  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#3, X  &lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;#1, Y  &lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;LOOP  &lt;br/&gt; &lt;br/&gt;END: &lt;br/&gt;</Source>
  <MemoryDataemoryData>
</Dolphin>